/*
 * generated by Xtext 2.14.0
 */
grammar InternalSmartHomeDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.unice.polytech.idm.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.unice.polytech.idm.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.unice.polytech.idm.xtext.services.SmartHomeDSLGrammarAccess;

}
@parser::members {
	private SmartHomeDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(SmartHomeDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSmartHome
entryRuleSmartHome
:
{ before(grammarAccess.getSmartHomeRule()); }
	 ruleSmartHome
{ after(grammarAccess.getSmartHomeRule()); } 
	 EOF 
;

// Rule SmartHome
ruleSmartHome 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSmartHomeAccess().getGroup()); }
		(rule__SmartHome__Group__0)
		{ after(grammarAccess.getSmartHomeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocation
entryRuleLocation
:
{ before(grammarAccess.getLocationRule()); }
	 ruleLocation
{ after(grammarAccess.getLocationRule()); } 
	 EOF 
;

// Rule Location
ruleLocation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocationAccess().getGroup()); }
		(rule__Location__Group__0)
		{ after(grammarAccess.getLocationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensorType
entryRuleSensorType
:
{ before(grammarAccess.getSensorTypeRule()); }
	 ruleSensorType
{ after(grammarAccess.getSensorTypeRule()); } 
	 EOF 
;

// Rule SensorType
ruleSensorType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorTypeAccess().getGroup()); }
		(rule__SensorType__Group__0)
		{ after(grammarAccess.getSensorTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getGroup()); }
		(rule__Sensor__Group__0)
		{ after(grammarAccess.getSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDuration
entryRuleDuration
:
{ before(grammarAccess.getDurationRule()); }
	 ruleDuration
{ after(grammarAccess.getDurationRule()); } 
	 EOF 
;

// Rule Duration
ruleDuration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDurationAccess().getGroup()); }
		(rule__Duration__Group__0)
		{ after(grammarAccess.getDurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getDescriptionAssignment()); }
		(rule__Event__DescriptionAssignment)
		{ after(grammarAccess.getEventAccess().getDescriptionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Operator
ruleOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DurationUnit
ruleDurationUnit
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationUnitAccess().getAlternatives()); }
		(rule__DurationUnit__Alternatives)
		{ after(grammarAccess.getDurationUnitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getEQUALSEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getOperatorAccess().getEQUALSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getINFERIOREnumLiteralDeclaration_1()); }
		('<')
		{ after(grammarAccess.getOperatorAccess().getINFERIOREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getSUPERIOREnumLiteralDeclaration_2()); }
		('>')
		{ after(grammarAccess.getOperatorAccess().getSUPERIOREnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationUnit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationUnitAccess().getMINUTEEnumLiteralDeclaration_0()); }
		('min')
		{ after(grammarAccess.getDurationUnitAccess().getMINUTEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDurationUnitAccess().getSECONDEnumLiteralDeclaration_1()); }
		('s')
		{ after(grammarAccess.getDurationUnitAccess().getSECONDEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__0__Impl
	rule__SmartHome__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getSmartHomeKeyword_0()); }
	'SmartHome'
	{ after(grammarAccess.getSmartHomeAccess().getSmartHomeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__1__Impl
	rule__SmartHome__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSmartHomeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__2__Impl
	rule__SmartHome__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getSensorTypesKeyword_2()); }
	'sensorTypes'
	{ after(grammarAccess.getSmartHomeAccess().getSensorTypesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__3__Impl
	rule__SmartHome__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getSmartHomeAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__4__Impl
	rule__SmartHome__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getSensorTypesAssignment_4()); }
	(rule__SmartHome__SensorTypesAssignment_4)
	{ after(grammarAccess.getSmartHomeAccess().getSensorTypesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__5__Impl
	rule__SmartHome__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getGroup_5()); }
	(rule__SmartHome__Group_5__0)*
	{ after(grammarAccess.getSmartHomeAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__6__Impl
	rule__SmartHome__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getSmartHomeAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__7__Impl
	rule__SmartHome__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getLocationsAssignment_7()); }
	(rule__SmartHome__LocationsAssignment_7)
	{ after(grammarAccess.getSmartHomeAccess().getLocationsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__8__Impl
	rule__SmartHome__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getGroup_8()); }
	(rule__SmartHome__Group_8__0)*
	{ after(grammarAccess.getSmartHomeAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__9__Impl
	rule__SmartHome__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getRulesKeyword_9()); }
	'rules'
	{ after(grammarAccess.getSmartHomeAccess().getRulesKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__10__Impl
	rule__SmartHome__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getLeftCurlyBracketKeyword_10()); }
	'{'
	{ after(grammarAccess.getSmartHomeAccess().getLeftCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__11__Impl
	rule__SmartHome__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getRulesAssignment_11()); }
	(rule__SmartHome__RulesAssignment_11)
	{ after(grammarAccess.getSmartHomeAccess().getRulesAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__12__Impl
	rule__SmartHome__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getGroup_12()); }
	(rule__SmartHome__Group_12__0)*
	{ after(grammarAccess.getSmartHomeAccess().getGroup_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__13__Impl
	rule__SmartHome__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getRightCurlyBracketKeyword_13()); }
	'}'
	{ after(grammarAccess.getSmartHomeAccess().getRightCurlyBracketKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getRightCurlyBracketKeyword_14()); }
	'}'
	{ after(grammarAccess.getSmartHomeAccess().getRightCurlyBracketKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SmartHome__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group_5__0__Impl
	rule__SmartHome__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getSmartHomeAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getSensorTypesAssignment_5_1()); }
	(rule__SmartHome__SensorTypesAssignment_5_1)
	{ after(grammarAccess.getSmartHomeAccess().getSensorTypesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SmartHome__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group_8__0__Impl
	rule__SmartHome__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getCommaKeyword_8_0()); }
	','
	{ after(grammarAccess.getSmartHomeAccess().getCommaKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getLocationsAssignment_8_1()); }
	(rule__SmartHome__LocationsAssignment_8_1)
	{ after(grammarAccess.getSmartHomeAccess().getLocationsAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SmartHome__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group_12__0__Impl
	rule__SmartHome__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getCommaKeyword_12_0()); }
	','
	{ after(grammarAccess.getSmartHomeAccess().getCommaKeyword_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmartHome__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmartHomeAccess().getRulesAssignment_12_1()); }
	(rule__SmartHome__RulesAssignment_12_1)
	{ after(grammarAccess.getSmartHomeAccess().getRulesAssignment_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Location__Group__0__Impl
	rule__Location__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationAccess().getLocationAction_0()); }
	()
	{ after(grammarAccess.getLocationAccess().getLocationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Location__Group__1__Impl
	rule__Location__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationAccess().getLocationKeyword_1()); }
	'Location'
	{ after(grammarAccess.getLocationAccess().getLocationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Location__Group__2__Impl
	rule__Location__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationAccess().getNameAssignment_2()); }
	(rule__Location__NameAssignment_2)
	{ after(grammarAccess.getLocationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Location__Group__3__Impl
	rule__Location__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getLocationAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Location__Group__4__Impl
	rule__Location__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationAccess().getGroup_4()); }
	(rule__Location__Group_4__0)?
	{ after(grammarAccess.getLocationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Location__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getLocationAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Location__Group_4__0__Impl
	rule__Location__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationAccess().getSensorsAssignment_4_0()); }
	(rule__Location__SensorsAssignment_4_0)
	{ after(grammarAccess.getLocationAccess().getSensorsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Location__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationAccess().getGroup_4_1()); }
	(rule__Location__Group_4_1__0)*
	{ after(grammarAccess.getLocationAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Location__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Location__Group_4_1__0__Impl
	rule__Location__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getLocationAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Location__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationAccess().getSensorsAssignment_4_1_1()); }
	(rule__Location__SensorsAssignment_4_1_1)
	{ after(grammarAccess.getLocationAccess().getSensorsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorType__Group__0__Impl
	rule__SensorType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorTypeAccess().getSensorTypeAction_0()); }
	()
	{ after(grammarAccess.getSensorTypeAccess().getSensorTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorTypeAccess().getNameAssignment_1()); }
	(rule__SensorType__NameAssignment_1)?
	{ after(grammarAccess.getSensorTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__0__Impl
	rule__Sensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
	'Sensor'
	{ after(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__1__Impl
	rule__Sensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getNameAssignment_1()); }
	(rule__Sensor__NameAssignment_1)
	{ after(grammarAccess.getSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__2__Impl
	rule__Sensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorTypeAssignment_2()); }
	(rule__Sensor__SensorTypeAssignment_2)
	{ after(grammarAccess.getSensorAccess().getSensorTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__3__Impl
	rule__Sensor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getSensorAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__4__Impl
	rule__Sensor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getDataFileAssignment_4()); }
	(rule__Sensor__DataFileAssignment_4)
	{ after(grammarAccess.getSensorAccess().getDataFileAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getSensorAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getRuleAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getConditionsAssignment_1()); }
	(rule__Rule__ConditionsAssignment_1)
	{ after(grammarAccess.getRuleAccess().getConditionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_2()); }
	(rule__Rule__Group_2__0)*
	{ after(grammarAccess.getRuleAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getForKeyword_3()); }
	'for'
	{ after(grammarAccess.getRuleAccess().getForKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getDurationAssignment_4()); }
	(rule__Rule__DurationAssignment_4)
	{ after(grammarAccess.getRuleAccess().getDurationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__5__Impl
	rule__Rule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getThenKeyword_5()); }
	'then'
	{ after(grammarAccess.getRuleAccess().getThenKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getEventAssignment_6()); }
	(rule__Rule__EventAssignment_6)
	{ after(grammarAccess.getRuleAccess().getEventAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_2__0__Impl
	rule__Rule__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getAndKeyword_2_0()); }
	'and'
	{ after(grammarAccess.getRuleAccess().getAndKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getConditionsAssignment_2_1()); }
	(rule__Rule__ConditionsAssignment_2_1)
	{ after(grammarAccess.getRuleAccess().getConditionsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getSensorAssignment_0()); }
	(rule__Condition__SensorAssignment_0)
	{ after(grammarAccess.getConditionAccess().getSensorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOperatorAssignment_1()); }
	(rule__Condition__OperatorAssignment_1)
	{ after(grammarAccess.getConditionAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOperandAssignment_2()); }
	(rule__Condition__OperandAssignment_2)
	{ after(grammarAccess.getConditionAccess().getOperandAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Duration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__0__Impl
	rule__Duration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getValueAssignment_0()); }
	(rule__Duration__ValueAssignment_0)
	{ after(grammarAccess.getDurationAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getUnitAssignment_1()); }
	(rule__Duration__UnitAssignment_1)
	{ after(grammarAccess.getDurationAccess().getUnitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SmartHome__SensorTypesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmartHomeAccess().getSensorTypesSensorTypeParserRuleCall_4_0()); }
		ruleSensorType
		{ after(grammarAccess.getSmartHomeAccess().getSensorTypesSensorTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__SensorTypesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmartHomeAccess().getSensorTypesSensorTypeParserRuleCall_5_1_0()); }
		ruleSensorType
		{ after(grammarAccess.getSmartHomeAccess().getSensorTypesSensorTypeParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__LocationsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmartHomeAccess().getLocationsLocationParserRuleCall_7_0()); }
		ruleLocation
		{ after(grammarAccess.getSmartHomeAccess().getLocationsLocationParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__LocationsAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmartHomeAccess().getLocationsLocationParserRuleCall_8_1_0()); }
		ruleLocation
		{ after(grammarAccess.getSmartHomeAccess().getLocationsLocationParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__RulesAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmartHomeAccess().getRulesRuleParserRuleCall_11_0()); }
		ruleRule
		{ after(grammarAccess.getSmartHomeAccess().getRulesRuleParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmartHome__RulesAssignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmartHomeAccess().getRulesRuleParserRuleCall_12_1_0()); }
		ruleRule
		{ after(grammarAccess.getSmartHomeAccess().getRulesRuleParserRuleCall_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getLocationAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__SensorsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationAccess().getSensorsSensorParserRuleCall_4_0_0()); }
		ruleSensor
		{ after(grammarAccess.getLocationAccess().getSensorsSensorParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Location__SensorsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationAccess().getSensorsSensorParserRuleCall_4_1_1_0()); }
		ruleSensor
		{ after(grammarAccess.getLocationAccess().getSensorsSensorParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorTypeAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getSensorTypeAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getSensorAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__SensorTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getSensorTypeSensorTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSensorAccess().getSensorTypeSensorTypeEStringParserRuleCall_2_0_1()); }
			ruleEString
			{ after(grammarAccess.getSensorAccess().getSensorTypeSensorTypeEStringParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSensorAccess().getSensorTypeSensorTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__DataFileAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getDataFileEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getSensorAccess().getDataFileEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConditionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_1_0()); }
		ruleCondition
		{ after(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConditionsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_2_1_0()); }
		ruleCondition
		{ after(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__DurationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getDurationDurationParserRuleCall_4_0()); }
		ruleDuration
		{ after(grammarAccess.getRuleAccess().getDurationDurationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__EventAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getEventEventParserRuleCall_6_0()); }
		ruleEvent
		{ after(grammarAccess.getRuleAccess().getEventEventParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__SensorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getSensorSensorCrossReference_0_0()); }
		(
			{ before(grammarAccess.getConditionAccess().getSensorSensorEStringParserRuleCall_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getConditionAccess().getSensorSensorEStringParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getConditionAccess().getSensorSensorCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOperatorOperatorEnumRuleCall_1_0()); }
		ruleOperator
		{ after(grammarAccess.getConditionAccess().getOperatorOperatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OperandAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOperandEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getConditionAccess().getOperandEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getValueEIntParserRuleCall_0_0()); }
		ruleEInt
		{ after(grammarAccess.getDurationAccess().getValueEIntParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__UnitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getUnitDurationUnitEnumRuleCall_1_0()); }
		ruleDurationUnit
		{ after(grammarAccess.getDurationAccess().getUnitDurationUnitEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__DescriptionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getDescriptionEStringParserRuleCall_0()); }
		ruleEString
		{ after(grammarAccess.getEventAccess().getDescriptionEStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
