/*
 * generated by Xtext 2.14.0
 */
grammar InternalSmartHomeDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.unice.polytech.idm.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.unice.polytech.idm.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.unice.polytech.idm.xtext.services.SmartHomeDSLGrammarAccess;

}

@parser::members {

 	private SmartHomeDSLGrammarAccess grammarAccess;

    public InternalSmartHomeDSLParser(TokenStream input, SmartHomeDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SmartHome";
   	}

   	@Override
   	protected SmartHomeDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSmartHome
entryRuleSmartHome returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSmartHomeRule()); }
	iv_ruleSmartHome=ruleSmartHome
	{ $current=$iv_ruleSmartHome.current; }
	EOF;

// Rule SmartHome
ruleSmartHome returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SmartHome'
		{
			newLeafNode(otherlv_0, grammarAccess.getSmartHomeAccess().getSmartHomeKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSmartHomeAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='sensorTypes'
		{
			newLeafNode(otherlv_2, grammarAccess.getSmartHomeAccess().getSensorTypesKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSmartHomeAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSmartHomeAccess().getSensorTypesSensorTypeParserRuleCall_4_0());
				}
				lv_sensorTypes_4_0=ruleSensorType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSmartHomeRule());
					}
					add(
						$current,
						"sensorTypes",
						lv_sensorTypes_4_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.SensorType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getSmartHomeAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSmartHomeAccess().getSensorTypesSensorTypeParserRuleCall_5_1_0());
					}
					lv_sensorTypes_6_0=ruleSensorType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmartHomeRule());
						}
						add(
							$current,
							"sensorTypes",
							lv_sensorTypes_6_0,
							"fr.unice.polytech.idm.xtext.SmartHomeDSL.SensorType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getSmartHomeAccess().getRightCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSmartHomeAccess().getLocationsLocationParserRuleCall_7_0());
				}
				lv_locations_8_0=ruleLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSmartHomeRule());
					}
					add(
						$current,
						"locations",
						lv_locations_8_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.Location");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getSmartHomeAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSmartHomeAccess().getLocationsLocationParserRuleCall_8_1_0());
					}
					lv_locations_10_0=ruleLocation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmartHomeRule());
						}
						add(
							$current,
							"locations",
							lv_locations_10_0,
							"fr.unice.polytech.idm.xtext.SmartHomeDSL.Location");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11='rules'
		{
			newLeafNode(otherlv_11, grammarAccess.getSmartHomeAccess().getRulesKeyword_9());
		}
		otherlv_12='{'
		{
			newLeafNode(otherlv_12, grammarAccess.getSmartHomeAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSmartHomeAccess().getRulesRuleParserRuleCall_11_0());
				}
				lv_rules_13_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSmartHomeRule());
					}
					add(
						$current,
						"rules",
						lv_rules_13_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_14=','
			{
				newLeafNode(otherlv_14, grammarAccess.getSmartHomeAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSmartHomeAccess().getRulesRuleParserRuleCall_12_1_0());
					}
					lv_rules_15_0=ruleRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmartHomeRule());
						}
						add(
							$current,
							"rules",
							lv_rules_15_0,
							"fr.unice.polytech.idm.xtext.SmartHomeDSL.Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getSmartHomeAccess().getRightCurlyBracketKeyword_13());
		}
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getSmartHomeAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRuleLocation
entryRuleLocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationRule()); }
	iv_ruleLocation=ruleLocation
	{ $current=$iv_ruleLocation.current; }
	EOF;

// Rule Location
ruleLocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLocationAccess().getLocationAction_0(),
					$current);
			}
		)
		otherlv_1='Location'
		{
			newLeafNode(otherlv_1, grammarAccess.getLocationAccess().getLocationKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocationAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocationRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLocationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLocationAccess().getSensorsSensorParserRuleCall_4_0_0());
					}
					lv_sensors_4_0=ruleSensor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLocationRule());
						}
						add(
							$current,
							"sensors",
							lv_sensors_4_0,
							"fr.unice.polytech.idm.xtext.SmartHomeDSL.Sensor");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getLocationAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLocationAccess().getSensorsSensorParserRuleCall_4_1_1_0());
						}
						lv_sensors_6_0=ruleSensor
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLocationRule());
							}
							add(
								$current,
								"sensors",
								lv_sensors_6_0,
								"fr.unice.polytech.idm.xtext.SmartHomeDSL.Sensor");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getLocationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSensorType
entryRuleSensorType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorTypeRule()); }
	iv_ruleSensorType=ruleSensorType
	{ $current=$iv_ruleSensorType.current; }
	EOF;

// Rule SensorType
ruleSensorType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSensorTypeAccess().getAnalogSensorTypeParserRuleCall_0());
		}
		this_AnalogSensorType_0=ruleAnalogSensorType
		{
			$current = $this_AnalogSensorType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSensorTypeAccess().getBooleanSensorTypeParserRuleCall_1());
		}
		this_BooleanSensorType_1=ruleBooleanSensorType
		{
			$current = $this_BooleanSensorType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAnalogSensorType
entryRuleAnalogSensorType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnalogSensorTypeRule()); }
	iv_ruleAnalogSensorType=ruleAnalogSensorType
	{ $current=$iv_ruleAnalogSensorType.current; }
	EOF;

// Rule AnalogSensorType
ruleAnalogSensorType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='analog'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnalogSensorTypeAccess().getAnalogKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnalogSensorTypeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnalogSensorTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanSensorType
entryRuleBooleanSensorType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanSensorTypeRule()); }
	iv_ruleBooleanSensorType=ruleBooleanSensorType
	{ $current=$iv_ruleBooleanSensorType.current; }
	EOF;

// Rule BooleanSensorType
ruleBooleanSensorType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='boolean'
		{
			newLeafNode(otherlv_0, grammarAccess.getBooleanSensorTypeAccess().getBooleanKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanSensorTypeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanSensorTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSensorAccess().getIntegerSensorParserRuleCall_0());
		}
		this_IntegerSensor_0=ruleIntegerSensor
		{
			$current = $this_IntegerSensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSensorAccess().getBooleanSensorParserRuleCall_1());
		}
		this_BooleanSensor_1=ruleBooleanSensor
		{
			$current = $this_BooleanSensor_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntegerSensor
entryRuleIntegerSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerSensorRule()); }
	iv_ruleIntegerSensor=ruleIntegerSensor
	{ $current=$iv_ruleIntegerSensor.current; }
	EOF;

// Rule IntegerSensor
ruleIntegerSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='IntegerSensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getIntegerSensorAccess().getIntegerSensorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerSensorAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerSensorRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getIntegerSensorAccess().getSensorTypeAnalogSensorTypeCrossReference_2_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getIntegerSensorAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerSensorAccess().getDataFileEStringParserRuleCall_4_0());
				}
				lv_dataFile_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerSensorRule());
					}
					set(
						$current,
						"dataFile",
						lv_dataFile_4_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getIntegerSensorAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleBooleanSensor
entryRuleBooleanSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanSensorRule()); }
	iv_ruleBooleanSensor=ruleBooleanSensor
	{ $current=$iv_ruleBooleanSensor.current; }
	EOF;

// Rule BooleanSensor
ruleBooleanSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BooleanSensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getBooleanSensorAccess().getBooleanSensorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanSensorAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanSensorRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getBooleanSensorAccess().getSensorTypeBooleanSensorTypeCrossReference_2_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getBooleanSensorAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanSensorAccess().getDataFileEStringParserRuleCall_4_0());
				}
				lv_dataFile_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanSensorRule());
					}
					set(
						$current,
						"dataFile",
						lv_dataFile_4_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getBooleanSensorAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_1_0());
				}
				lv_conditions_1_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					add(
						$current,
						"conditions",
						lv_conditions_1_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='and'
			{
				newLeafNode(otherlv_2, grammarAccess.getRuleAccess().getAndKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_2_1_0());
					}
					lv_conditions_3_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						add(
							$current,
							"conditions",
							lv_conditions_3_0,
							"fr.unice.polytech.idm.xtext.SmartHomeDSL.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='for'
		{
			newLeafNode(otherlv_4, grammarAccess.getRuleAccess().getForKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getDurationDurationParserRuleCall_4_0());
				}
				lv_duration_5_0=ruleDuration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"duration",
						lv_duration_5_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.Duration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='then'
		{
			newLeafNode(otherlv_6, grammarAccess.getRuleAccess().getThenKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getEventEventParserRuleCall_6_0());
				}
				lv_event_7_0=ruleEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"event",
						lv_event_7_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.Event");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionAccess().getIntegerConditionParserRuleCall_0());
		}
		this_IntegerCondition_0=ruleIntegerCondition
		{
			$current = $this_IntegerCondition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionAccess().getBooleanConditionParserRuleCall_1());
		}
		this_BooleanCondition_1=ruleBooleanCondition
		{
			$current = $this_BooleanCondition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntegerCondition
entryRuleIntegerCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerConditionRule()); }
	iv_ruleIntegerCondition=ruleIntegerCondition
	{ $current=$iv_ruleIntegerCondition.current; }
	EOF;

// Rule IntegerCondition
ruleIntegerCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerConditionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getIntegerConditionAccess().getSensorIntegerSensorCrossReference_0_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerConditionAccess().getOperatorIntegerOperatorEnumRuleCall_1_0());
				}
				lv_operator_1_0=ruleIntegerOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerConditionRule());
					}
					set(
						$current,
						"operator",
						lv_operator_1_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.IntegerOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerConditionAccess().getOperandEIntParserRuleCall_2_0());
				}
				lv_operand_2_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerConditionRule());
					}
					set(
						$current,
						"operand",
						lv_operand_2_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanCondition
entryRuleBooleanCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanConditionRule()); }
	iv_ruleBooleanCondition=ruleBooleanCondition
	{ $current=$iv_ruleBooleanCondition.current; }
	EOF;

// Rule BooleanCondition
ruleBooleanCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanConditionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getBooleanConditionAccess().getSensorBooleanSensorCrossReference_0_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanConditionAccess().getOperatorBooleanOperatorEnumRuleCall_1_0());
				}
				lv_operator_1_0=ruleBooleanOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanConditionRule());
					}
					set(
						$current,
						"operator",
						lv_operator_1_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.BooleanOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanConditionAccess().getOperandEBooleanParserRuleCall_2_0());
				}
				lv_operand_2_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanConditionRule());
					}
					set(
						$current,
						"operand",
						lv_operand_2_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getEIntAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleDuration
entryRuleDuration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDurationRule()); }
	iv_ruleDuration=ruleDuration
	{ $current=$iv_ruleDuration.current; }
	EOF;

// Rule Duration
ruleDuration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDurationAccess().getValueEIntParserRuleCall_0_0());
				}
				lv_value_0_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDurationRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDurationAccess().getUnitDurationUnitEnumRuleCall_1_0());
				}
				lv_unit_1_0=ruleDurationUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDurationRule());
					}
					set(
						$current,
						"unit",
						lv_unit_1_0,
						"fr.unice.polytech.idm.xtext.SmartHomeDSL.DurationUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEventAccess().getDescriptionEStringParserRuleCall_0());
			}
			lv_description_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEventRule());
				}
				set(
					$current,
					"description",
					lv_description_0_0,
					"fr.unice.polytech.idm.xtext.SmartHomeDSL.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Rule IntegerOperator
ruleIntegerOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='='
			{
				$current = grammarAccess.getIntegerOperatorAccess().getEQUALSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIntegerOperatorAccess().getEQUALSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<'
			{
				$current = grammarAccess.getIntegerOperatorAccess().getINFERIOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIntegerOperatorAccess().getINFERIOREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='>'
			{
				$current = grammarAccess.getIntegerOperatorAccess().getSUPERIOREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getIntegerOperatorAccess().getSUPERIOREnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule BooleanOperator
ruleBooleanOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='is'
			{
				$current = grammarAccess.getBooleanOperatorAccess().getISEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBooleanOperatorAccess().getISEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='isnot'
			{
				$current = grammarAccess.getBooleanOperatorAccess().getIS_NOTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBooleanOperatorAccess().getIS_NOTEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule DurationUnit
ruleDurationUnit returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='min'
			{
				$current = grammarAccess.getDurationUnitAccess().getMINUTEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDurationUnitAccess().getMINUTEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='s'
			{
				$current = grammarAccess.getDurationUnitAccess().getSECONDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDurationUnitAccess().getSECONDEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
